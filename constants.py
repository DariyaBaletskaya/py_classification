import numpy as np

# matrix representation of letters
D_MATRIX = np.array([[-1, -1, -1, 1, -1, -1, -1],
                     [- 1, -1, 1, -1, 1, -1, -1],
                     [-1, 1, -1, -1, -1, 1, -1],
                     [-1, 1, -1, -1, -1, 1, -1],
                     [-1, 1, -1, -1, -1, 1, -1],
                     [-1, 1, -1, -1, -1, 1, -1],
                     [1, 1, 1,  1, 1, 1,     1],
                     [1, -1, -1, -1, -1, -1, 1],
                     [1, -1, -1, -1, -1, -1, 1], ])


B_MATRIX = np.array([[1, 1, 1, 1, 1, 1, 1],
                     [1, -1, -1, -1, -1, -1, -1],
                     [1, -1, -1, -1, -1, -1, -1],
                     [1, -1, -1, -1, -1, -1, -1],
                     [1, 1, 1, 1, 1, 1, 1],
                     [1, -1, -1, -1, -1, -1, 1],
                     [1, -1, -1, -1, -1, -1, 1],
                     [1, -1, -1, -1, -1, -1, 1],
                     [1, 1, 1, 1, 1, 1, 1], ])


I_MATRIX = np.array([[1, -1, -1, -1, -1, -1, 1],
                     [1, -1, -1, -1, -1, -1, 1],
                     [1, -1, -1, -1, -1, -1, 1],
                     [1, -1, -1, -1, -1, 1, 1],
                     [1, -1, -1, -1, 1, -1, 1],
                     [1, -1, -1, 1, -1, -1, 1],
                     [1, -1, 1,  -1, -1, -1, 1],
                     [1, 1, -1, -1, -1, -1, 1],
                     [1, -1, -1, -1, -1, -1, 1], ])


U_MATRIX = np.array([[1, -1, -1, -1, -1, -1, 1],
                     [-1, 1, -1, -1, -1, 1, -1],
                     [-1, -1, 1, -1, 1, -1, -1],
                     [-1, -1, -1, 1, -1, -1, -1],
                     [-1, -1, -1, 1, -1, -1, -1],
                     [-1, -1, 1, -1, -1, -1, -1],
                     [-1, -1, 1, -1, -1, -1, -1],
                     [-1, 1, -1, -1, -1, -1, -1],
                     [1, -1, -1, -1, -1, -1, -1], ])


# matrix representation of letter with noizes
D_MATRIX_NOISED = np.array([[-1, -1, -1, 1, 1, -1, -1],
                            [- 1, -1, 1, -1, 1, -1, -1],
                            [-1, 1, -1, -1, -1, 1, -1],
                            [-1, 1, -1, -1, -1, 1, -1],
                            [-1, 1, -1, -1, 1, 1, -1],
                            [-1, 1, -1, -1, -1, 1, -1],
                            [1, 1, 1,  1, 1, 1,     1],
                            [1, -1, -1, -1, -1, -1, 1],
                            [1, -1, -1, -1, -1, -1, 1], ])
B_MATRIX_NOISED = np.array([[1, 1, 1, 1, 1, 1, 1],
                            [1, -1, -1, -1, -1, -1, -1],
                            [1, -1, -1, -1, -1, -1, 1],
                            [1, -1, -1, -1, -1, -1, -1],
                            [1, 1, 1, 1, 1, 1, 1],
                            [1, -1, -1, -1, -1, -1, 1],
                            [1, -1, -1, -1, -1, -1, 1],
                            [1, -1, -1, 1, -1, -1, 1],
                            [1, 1, 1, 1, 1, 1, 1], ])
I_MATRIX_NOISED = np.array([[1, -1, -1, -1, -1, -1, 1],
                            [1, -1, -1, -1, -1, -1, 1],
                            [1, -1, -1, -1, -1, -1, 1],
                            [1, -1, -1, -1, -1, 1, 1],
                            [1, -1, -1, -1, 1, -1, 1],
                            [1, -1, -1, 1, -1, 1, 1],
                            [1, -1, 1,  1, -1, -1, 1],
                            [1, 1, -1, -1, -1, -1, 1],
                            [1, -1, -1, -1, -1, -1, 1], ])
U_MATRIX_NOISED = np.array([[1, -1, -1, -1, -1, -1, 1],
                            [-1, 1, -1, -1, -1, 1, -1],
                            [-1, -1, 1, -1, 1, -1, -1],
                            [-1, -1, -1, 1, -1, -1, -1],
                            [-1, -1, -1, 1, -1, 1, -1],
                            [-1, -1, 1, -1, -1, -1, -1],
                            [-1, -1, 1, -1, -1, -1, -1],
                            [-1, 1, -1, 1, -1, -1, -1],
                            [1, -1, -1, -1, -1, -1, -1], ])
# ascii binary letter representation
D_ASCII = np.array([[1, -1, 1, -1, -1, 1, -1, -1]])
B_ASCII = np.array([[-1, 1, -1, -1, -1, -1, 1, -1]])
I_ASCII = np.array([[-1, 1, -1, -1, 1, -1, -1, 1]])
U_ASCII = np.array([[-1, 1, -1, 1, -1, 1, -1, 1]])

# ascii binary noized letter representation
D_ASCII_NOIZED = np.array([[1, 1, 1, -1, -1, 1, -1, -1]])
B_ASCII_NOIZED = np.array([[-1, 1, -1, -1, -1, -1, 1, -1]])
I_ASCII_NOIZED = np.array([[-1, 1, -1, -1, 1, 1, -1, 1]])
U_ASCII_NOIZED = np.array([[-1, 1, 1, 1, -1, 1, -1, 1]])
